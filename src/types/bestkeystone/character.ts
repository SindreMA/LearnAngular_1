// Generated by https://quicktype.io

export interface CharacterResult {
    run_data:     RunData;
    details:      Details;
    otherMatches: OtherMatch[];
}

export interface Details {
    scan_id:                 number;
    id:                      number;
    region:                  string;
    name:                    string;
    realm:                   string;
    gender:                  string;
    faction:                 Faction;
    race:                    number;
    character_class:         number;
    active_spec:             number;
    guild:                   null;
    level:                   number;
    achievement_points:      number;
    last_login_timestamp:    number;
    average_item_level:      number;
    equipped_item_level:     number;
    statistics:              Statistics;
    achievements_statistics: string;
    equipment:               Equipment[];
    avatar_url:              string;
    bust_url:                string;
    render_url:              string;
    created:                 number;
    encounters:              Encounter[];
    talents:                 Array<TalentElement[]>;
}

export interface Encounter {
    expansion: Expansion;
    raids:     RAIDElement[];
}

export interface Expansion {
    id:      number;
    name:    string;
    created: number;
}

export interface RAIDElement {
    raid:         InstanceClass;
    difficulties: DifficultyElement[];
}

export interface DifficultyElement {
    difficulty: BossDifficulty;
    bosses:     Boss[];
}

export interface Boss {
    scan_id:             number;
    instance:            InstanceClass;
    difficulty:          BossDifficulty;
    boss:                Expansion;
    kills:               number;
    last_kill_timestamp: number;
}

export interface BossDifficulty {
    id:      number;
    type:    DifficultyType;
    name:    DifficultyName;
    created: number;
    order:   number;
}

export enum DifficultyName {
    Heroic = "Heroic",
    Mythic = "Mythic",
    Normal = "Normal",
    RAIDFinder = "Raid Finder",
    The10Player = "10 Player",
    The10PlayerHeroic = "10 Player (Heroic)",
    The25Player = "25 Player",
    The25PlayerHeroic = "25 Player (Heroic)",
}

export enum DifficultyType {
    Heroic = "HEROIC",
    Legacy10_Man = "LEGACY_10_MAN",
    Legacy10_ManHeroic = "LEGACY_10_MAN_HEROIC",
    Legacy25_Man = "LEGACY_25_MAN",
    Legacy25_ManHeroic = "LEGACY_25_MAN_HEROIC",
    Lfr = "LFR",
    Mythic = "MYTHIC",
    Normal = "NORMAL",
}

export interface InstanceClass {
    id:        number;
    name:      string;
    expansion: Expansion;
    bosses:    Expansion[];
    created:   number;
}

export interface Equipment {
    id:                    number;
    scan_id:               number;
    gear_scan_id:          number;
    slot:                  string;
    quantity:              number;
    context:               number;
    bonus_list:            string;
    quality:               Quality;
    name:                  string;
    item_class:            number;
    item_subclass:         number;
    socket:                number | null;
    enchantment:           number | null;
    inventory_type:        string;
    binding:               Binding;
    armor:                 number | null;
    stats:                 string;
    level_requirements:    number | null;
    item_level:            number;
    transmog:              number | null;
    durability:            number | null;
    name_description:      NameDescription | null;
    name_color:            NameColor | null;
    icon:                  Icon;
    azerite:               null;
    azerite_powers:        null;
    azerite_powers_exist:  null;
    azerite_details_exist: null;
    iconUrl:               string;
}

export enum Binding {
    OnAcquire = "ON_ACQUIRE",
}

export enum Icon {
    Empty = "",
    InvBeltLeatherZandalardungeonC01 = "inv_belt_leather_zandalardungeon_c_01",
    InvBracerLeatherLegiondungeonC01 = "inv_bracer_leather_legiondungeon_c_01",
}

export enum NameColor {
    The00Ff00 = "00FF00",
    The19Ff19 = "19FF19",
}

export enum NameDescription {
    Heroic = "Heroic",
    ShadowflameCrafted = "Shadowflame Crafted",
}

export enum Quality {
    Epic = "EPIC",
}

export enum Faction {
    Alliance = "ALLIANCE",
    Horde = "HORDE",
    Unknown = "Unknown",
}

export interface Statistics {
    scan_id:                        number;
    health:                         number;
    power:                          number;
    power_type:                     number;
    stats:                          Stat[];
    bonus_armor:                    number;
    attack_power:                   number;
    versatility:                    number;
    versatility_damage_done_bonus:  number;
    versatility_healing_done_bonus: number;
    versatility_damage_taken_bonus: number;
    main_hand_damage_min:           number;
    main_hand_damage_max:           number;
    main_hand_speed:                number;
    main_hand_dps:                  number;
    spell_power:                    number;
    spell_penetration:              number;
    mana_regen:                     number;
    mana_regen_combat:              number;
    corruption:                     number;
    corruption_resistance:          number;
    effective_corruption:           number;
}

export interface Stat {
    scan_id:      number;
    name:         string;
    rating:       number;
    rating_bonus: number;
    value:        number;
    _base:        number;
    effective:    number;
}

export interface TalentElement {
    id:        number;
    talent:    TalentTalent;
    spell:     Spell;
    specId:    number;
    scanId:    number;
    type:      TalentType;
    rank:      number;
    isActive:  boolean;
    loadoutId: number;
}

export interface Spell {
    id:           number;
    name:         string;
    description:  string;
    spellIconUrl: string;
    created:      number;
}

export interface TalentTalent {
    uniqId:      number;
    tierIndex:   number;
    columnIndex: number;
    level:       null;
    description: string;
    spellId:     number;
    classId:     number;
    name:        string;
    created:     number;
    specId:      number;
    id:          number;
}

export enum TalentType {
    Class = "class",
    Spec = "spec",
}

export interface OtherMatch {
    player:       OtherMatchPlayer;
    lastRun:      LastRun;
    lastSeenSpec: number;
}

export interface LastRun {
    id:                 number;
    contentId:          string;
    region:             string;
    keystoneLevel:      number;
    duration:           number;
    completedTimestamp: number;
    faction:            Faction;
    dungeon:            number;
    created:            number;
    affix1:             number;
    affix2:             number;
    affix3:             number;
    affix4:             number;
    periode:            number;
    player1Id:          number;
    player1Spec:        number;
    player2Id:          number;
    player2Spec:        number;
    player3Id:          number;
    player3Spec:        number;
    player4Id:          number;
    player4Spec:        number;
    player5Id:          number;
    player5Spec:        number;
    score:              number;
    zone:               number;
    scoreLink:          null;
}

export interface OtherMatchPlayer {
    id:         number;
    name:       string;
    region:     string;
    realm:      string;
    class:      number;
    details:    null;
    blizzardId: number;
}

export interface RunData {
    player_id: number;
    region:    string;
    realm:     string;
    name:      string;
    renames:   any[];
    spec:      number;
    season:    Season;
    score:     number;
    runs:      Run[];
}

export interface Run {
    dungeon:        Dungeon;
    zone:           Dungeon;
    affixes:        number[];
    time:           Time;
    keystonrun_id:  number;
    keystone_level: number;
    faction:        Faction;
    score:          number;
    periode:        number;
    players:        PlayerElement[];
    player_id:      number;
}

export interface Dungeon {
    id:   number;
    name: DungeonName;
    slug: Slug;
}

export enum DungeonName {
    BrackenhideHollow = "Brackenhide Hollow",
    Freehold = "Freehold",
    HallsOfInfusion = "Halls of Infusion",
    NeltharionSLair = "Neltharion's Lair",
    Neltharus = "Neltharus",
    TheUnderrot = "The Underrot",
    TheVortexPinnacle = "The Vortex Pinnacle",
    UldamanLegacyOfTyr = "Uldaman: Legacy of Tyr",
}

export enum Slug {
    BrackenhideHollow = "brackenhide-hollow",
    Freehold = "freehold",
    HallsOfInfusion = "halls-of-infusion",
    NeltharionsLair = "neltharions-lair",
    Neltharus = "neltharus",
    TheUnderrot = "the-underrot",
    TheVortexPinnacle = "the-vortex-pinnacle",
    UldamanLegacyOfTyr = "uldaman-legacy-of-tyr",
}

export interface PlayerElement {
    index: number;
    id:    number;
    spec:  number;
}

export interface Time {
    map_time:            number;
    clear_time:          number;
    ontime:              boolean;
    completed_timestamp: number;
}

export interface Season {
    id:     number;
    name:   string;
    start:  number;
    end:    number;
    region: string;
}
